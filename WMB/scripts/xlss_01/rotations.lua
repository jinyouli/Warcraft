-- This file was generated using Luraph Obfuscator v12.5 by memcorrupt.

local sdakdasIllili1I11IlillIIli = assert local sdakdaslIlll11I1liIilIl1I1ii = select local sdakdasl1111Ii1liIi1llIIiI = tonumber local sdakdasii1lillI11li1lli1II = unpack local sdakdasIi1IIiilil1iliIiliI = pcall local sdakdasl1IIli1I1lII1lII1li = setfenv local sdakdaslIll1l1iI11i1Il11il = setmetatable local sdakdasIiiiI1iiIllI1IlI1ll = type local sdakdasiilI1llililil1li1il = getfenv local sdakdaslIl11ll11IIlIl1liil1I = tostring local sdakdaslIlilIi11i1lIilllIIi1 = error local sdakdaslIlillIiIilii1lIliIli = string.sub local sdakdasIIiliiIIiiI1Iiii1Il = string.byte local sdakdasIliII1i111IiIl1lIIi = string.char local sdakdasIlIiii11i1Il1lliii1 = string.rep local sdakdasI111IIllllill1ilii1 = string.gsub local sdakdasiiili1IiII1Il1lI1iI = string.match local sdakdasIiIl1iiilIii1i1llIl = table.insert local sdakdasl1lll1Ii1lIlIlIl1II = sdakdasIIiliiIIiiI1Iiii1Il("9", 1) local sdakdaslIll1lllll11lIil1Iill, sdakdaslillIl1lliiliiillIl = #{2247}, #{ 2836, 2702, 105, 1184, 4350, 2344, 5675, 2408, 3763, 4204, 6813, 3226, 470, 3504, 4112, 4254, 6430, 1342, 3123, 4854, 5053, 1197 } + sdakdasl1lll1Ii1lIlIlIl1II + 130992 local sdakdasi1IlIIIll11i11iIii1 = {} local sdakdasiII11i1iiIllI11Iill = 1 local sdakdaslIlIlIl1I11ll1lI1iI1I, sdakdaslIlI1IiIIIIllIIlI1Ill local function sdakdaslIi1l1liilI11lliIli(sdakdasilill1II111lIiIlI11, sdakdasIl111lilill11lli1iI) local sdakdasl1IillilIl1iIli11I1 sdakdasilill1II111lIiIlI11 = sdakdasI111IIllllill1ilii1(sdakdaslIlillIiIilii1lIliIli(sdakdasilill1II111lIiIlI11, 5), "..", function(sdakdasIII111lliIlilI111ii) if sdakdasIIiliiIIiiI1Iiii1Il(sdakdasIII111lliIlilI111ii, 2) == 72 then sdakdasl1IillilIl1iIli11I1 = sdakdasl1111Ii1liIi1llIIiI(sdakdaslIlillIiIilii1lIliIli(sdakdasIII111lliIlilI111ii, 1, 1)) return "" else local sdakdasI1ilIl1i1l1111iIi1I = sdakdasIliII1i111IiIl1lIIi(sdakdasl1111Ii1liIi1llIIiI(sdakdasIII111lliIlilI111ii, 16)) if sdakdasl1IillilIl1iIli11I1 then local sdakdaslIl1i1liililI11I1l11I = sdakdasIlIiii11i1Il1lliii1(sdakdasI1ilIl1i1l1111iIi1I, sdakdasl1IillilIl1iIli11I1) sdakdasl1IillilIl1iIli11I1 = nil return sdakdaslIl1i1liililI11I1l11I else return sdakdasI1ilIl1i1l1111iIi1I end end end) local function sdakdasIIl1i1l11Ii1IlilIIi() local sdakdasIl1IllIiii1I1IIlilI = sdakdasIIiliiIIiiI1Iiii1Il(sdakdasilill1II111lIiIlI11, sdakdasiII11i1iiIllI11Iill, sdakdasiII11i1iiIllI11Iill) sdakdasiII11i1iiIllI11Iill = sdakdasiII11i1iiIllI11Iill + 1 return sdakdasIl1IllIiii1I1IIlilI end local function sdakdasIlili1IIi111iIlII1I() local sdakdasIl1IllIiii1I1IIlilI, sdakdasI1ilIl1i1l1111iIi1I, sdakdaslIl1i1liililI11I1l11I, sdakdasIi1IiliIIii1IililIl = sdakdasIIiliiIIiiI1Iiii1Il(sdakdasilill1II111lIiIlI11, sdakdasiII11i1iiIllI11Iill, sdakdasiII11i1iiIllI11Iill + 3) sdakdasiII11i1iiIllI11Iill = sdakdasiII11i1iiIllI11Iill + 4 return sdakdasIi1IiliIIii1IililIl * 16777216 + sdakdaslIl1i1liililI11I1l11I * 65536 + sdakdasI1ilIl1i1l1111iIi1I * 256 + sdakdasIl1IllIiii1I1IIlilI end local function sdakdaslIl1I1liIIlIllI111i1I(sdakdasll1il1Iil11ll1i1ill, sdakdaslIlIiIi1Ii1IIi1lIlii1, sdakdasillllIi111II1l1iiil) if sdakdasillllIi111II1l1iiil then local sdakdaslliIlIIi1IiIl11lI1I, sdakdaslIlIi11Ii11II1lliIiIi = 0, 0 for sdakdasI1ll11IIiI11i1lIlI1 = sdakdaslIlIiIi1Ii1IIi1lIlii1, sdakdasillllIi111II1l1iiil do sdakdaslliIlIIi1IiIl11lI1I = sdakdaslliIlIIi1IiIl11lI1I + 2 ^ sdakdaslIlIi11Ii11II1lliIiIi * sdakdaslIl1I1liIIlIllI111i1I(sdakdasll1il1Iil11ll1i1ill, sdakdasI1ll11IIiI11i1lIlI1) sdakdaslIlIi11Ii11II1lliIiIi = sdakdaslIlIi11Ii11II1lliIiIi + 1 end return sdakdaslliIlIIi1IiIl11lI1I else local sdakdasi1ilIIliIii1llilIII = 2 ^ (sdakdaslIlIiIi1Ii1IIi1lIlii1 - 1) return sdakdasi1ilIIliIii1llilIII <= sdakdasll1il1Iil11ll1i1ill % (sdakdasi1ilIIliIii1llilIII + sdakdasi1ilIIliIii1llilIII) and 1 or 0 end end local function sdakdasIIlII1Il1i1llIlilii() local sdakdasIl1IllIiii1I1IIlilI, sdakdasI1ilIl1i1l1111iIi1I = sdakdasIlili1IIi111iIlII1I(), sdakdasIlili1IIi111iIlII1I() if sdakdasIl1IllIiii1I1IIlilI == 0 and sdakdasI1ilIl1i1l1111iIi1I == 0 then return 0 end return (-2 * sdakdaslIl1I1liIIlIllI111i1I(sdakdasI1ilIl1i1l1111iIi1I, 32) + 1) * 2 ^ (sdakdaslIl1I1liIIlIllI111i1I(sdakdasI1ilIl1i1l1111iIi1I, 21, 31) - 1023) * ((sdakdaslIl1I1liIIlIllI111i1I(sdakdasI1ilIl1i1l1111iIi1I, 1, 20) * 4294967296 + sdakdasIl1IllIiii1I1IIlilI) / 4503599627370496 + 1) end local sdakdaslIl1lIII1I1l1lIi1IiII = bit or bit32 local sdakdaslIiii11i11lllll1IlI = sdakdaslIl1lIII1I1l1lIi1IiII and sdakdaslIl1lIII1I1l1lIi1IiII.bxor or function(sdakdasIl1IllIiii1I1IIlilI, sdakdasI1ilIl1i1l1111iIi1I) local sdakdaslll1iI1lII1il1Ii11I = 1 local sdakdaslIl1i1liililI11I1l11I = 0 while sdakdasIl1IllIiii1I1IIlilI > 0 and sdakdasI1ilIl1i1l1111iIi1I > 0 do local sdakdasil1Ii1iiIIII1i1illl = sdakdasIl1IllIiii1I1IIlilI % 2 local sdakdasi1ilIlIl1l1lll1llII = sdakdasI1ilIl1i1l1111iIi1I % 2 if sdakdasil1Ii1iiIIII1i1illl ~= sdakdasi1ilIlIl1l1lll1llII then sdakdaslIl1i1liililI11I1l11I = sdakdaslIl1i1liililI11I1l11I + sdakdaslll1iI1lII1il1Ii11I end sdakdasIl1IllIiii1I1IIlilI = (sdakdasIl1IllIiii1I1IIlilI - sdakdasil1Ii1iiIIII1i1illl) / 2 sdakdasI1ilIl1i1l1111iIi1I = (sdakdasI1ilIl1i1l1111iIi1I - sdakdasi1ilIlIl1l1lll1llII) / 2 sdakdaslll1iI1lII1il1Ii11I = sdakdaslll1iI1lII1il1Ii11I * 2 end if sdakdasIl1IllIiii1I1IIlilI < sdakdasI1ilIl1i1l1111iIi1I then sdakdasIl1IllIiii1I1IIlilI = sdakdasI1ilIl1i1l1111iIi1I end while sdakdasIl1IllIiii1I1IIlilI > 0 do local sdakdasil1Ii1iiIIII1i1illl = sdakdasIl1IllIiii1I1IIlilI % 2 if sdakdasil1Ii1iiIIII1i1illl > 0 then sdakdaslIl1i1liililI11I1l11I = sdakdaslIl1i1liililI11I1l11I + sdakdaslll1iI1lII1il1Ii11I end sdakdasIl1IllIiii1I1IIlilI = (sdakdasIl1IllIiii1I1IIlilI - sdakdasil1Ii1iiIIII1i1illl) / 2 sdakdaslll1iI1lII1il1Ii11I = sdakdaslll1iI1lII1il1Ii11I * 2 end return sdakdaslIl1i1liililI11I1l11I end local function sdakdaslIl1I1il1ill1II1i1IIi(sdakdasI1ill1IiilIIil1iiil) local sdakdasli1lliili1iiI1lliII = { sdakdasIIiliiIIiiI1Iiii1Il(sdakdasilill1II111lIiIlI11, sdakdasiII11i1iiIllI11Iill, sdakdasiII11i1iiIllI11Iill + 3) } sdakdasiII11i1iiIllI11Iill = sdakdasiII11i1iiIllI11Iill + 4 local sdakdasIl1IllIiii1I1IIlilI = sdakdaslIiii11i11lllll1IlI(sdakdasli1lliili1iiI1lliII[1], sdakdaslIlI1IiIIIIllIIlI1Ill) local sdakdasI1ilIl1i1l1111iIi1I = sdakdaslIiii11i11lllll1IlI(sdakdasli1lliili1iiI1lliII[2], sdakdaslIlI1IiIIIIllIIlI1Ill) local sdakdaslIl1i1liililI11I1l11I = sdakdaslIiii11i11lllll1IlI(sdakdasli1lliili1iiI1lliII[3], sdakdaslIlI1IiIIIIllIIlI1Ill) local sdakdasIi1IiliIIii1IililIl = sdakdaslIiii11i11lllll1IlI(sdakdasli1lliili1iiI1lliII[4], sdakdaslIlI1IiIIIIllIIlI1Ill) sdakdaslIlI1IiIIIIllIIlI1Ill = (69 * sdakdaslIlI1IiIIIIllIIlI1Ill + sdakdasI1ill1IiilIIil1iiil) % 256 return sdakdasIi1IiliIIii1IililIl * 16777216 + sdakdaslIl1i1liililI11I1l11I * 65536 + sdakdasI1ilIl1i1l1111iIi1I * 256 + sdakdasIl1IllIiii1I1IIlilI end local function sdakdaslIlii1ii1IiIii11iii1l(sdakdasl11Il11iIiii1I1l11l) local sdakdasllillllII11liiI1II1 = sdakdasIlili1IIi111iIlII1I() local sdakdaslIl1I1llIIl1l1II11iiI = "" for sdakdasI1ll11IIiI11i1lIlI1 = sdakdaslIll1lllll11lIil1Iill, sdakdasllillllII11liiI1II1 do sdakdaslIl1I1llIIl1l1II11iiI = sdakdaslIl1I1llIIl1l1II11iiI .. sdakdasIliII1i111IiIl1lIIi(sdakdaslIiii11i11lllll1IlI(sdakdasIIiliiIIiiI1Iiii1Il(sdakdasilill1II111lIiIlI11, sdakdasiII11i1iiIllI11Iill + sdakdasI1ll11IIiI11i1lIlI1 - 1), sdakdaslIlIlIl1I11ll1lI1iI1I)) sdakdaslIlIlIl1I11ll1lI1iI1I = (sdakdasl11Il11iIiii1I1l11l * sdakdaslIlIlIl1I11ll1lI1iI1I + 13) % 256 end sdakdasiII11i1iiIllI11Iill = sdakdasiII11i1iiIllI11Iill + sdakdasllillllII11liiI1II1 return sdakdaslIl1I1llIIl1l1II11iiI end sdakdaslIlIlIl1I11ll1lI1iI1I = sdakdasIIl1i1l11Ii1IlilIIi() sdakdaslIlI1IiIIIIllIIlI1Ill = sdakdasIIl1i1l11Ii1IlilIIi() local sdakdaslIlliIli11IillllIIlIl = {} for sdakdasI1ll11IIiI11i1lIlI1 = sdakdaslIll1lllll11lIil1Iill, sdakdasIIl1i1l11Ii1IlilIIi() do local sdakdasi1I1111IIIlIll1I11i = sdakdasIIl1i1l11Ii1IlilIIi() local sdakdasiilIIII11I1l11lill1 = (sdakdasI1ll11IIiI11i1lIlI1 - 1) * 2 sdakdaslIlliIli11IillllIIlIl[sdakdasiilIIII11I1l11lill1] = sdakdaslIl1I1liIIlIllI111i1I(sdakdasi1I1111IIIlIll1I11i, 1, 4) sdakdaslIlliIli11IillllIIlIl[sdakdasiilIIII11I1l11lill1 + 1] = sdakdaslIl1I1liIIlIllI111i1I(sdakdasi1I1111IIIlIll1I11i, 5, 8) end local function sdakdasilIIiI11lI111Il1I1l() local sdakdasl1illlIlllIlIlilI1l = { {}, {}, nil, {}, nil, nil, {} } local sdakdasIiI1iiiIil11IlI11Il = sdakdasIlili1IIi111iIlII1I() for sdakdasI1ll11IIiI11i1lIlI1 = sdakdaslIll1lllll11lIil1Iill, sdakdasIiI1iiiIil11IlI11Il do sdakdasl1illlIlllIlIlilI1l[4][sdakdasI1ll11IIiI11i1lIlI1 - sdakdaslIll1lllll11lIil1Iill] = sdakdasilIIiI11lI111Il1I1l() end sdakdasl1illlIlllIlIlilI1l[5] = sdakdasIIl1i1l11Ii1IlilIIi() sdakdasIIl1i1l11Ii1IlilIIi() local sdakdasIiI1iiiIil11IlI11Il = sdakdasIlili1IIi111iIlII1I() for sdakdasI1ll11IIiI11i1lIlI1 = sdakdaslIll1lllll11lIil1Iill, sdakdasIiI1iiiIil11IlI11Il do sdakdasl1illlIlllIlIlilI1l[1][sdakdasI1ll11IIiI11i1lIlI1] = sdakdasIlili1IIi111iIlII1I() end sdakdasIlili1IIi111iIlII1I() sdakdasIlili1IIi111iIlII1I() sdakdasIIl1i1l11Ii1IlilIIi() sdakdasIlili1IIi111iIlII1I() sdakdasl1illlIlllIlIlilI1l[3] = sdakdasIIl1i1l11Ii1IlilIIi() sdakdasl1illlIlllIlIlilI1l[6] = sdakdasIIl1i1l11Ii1IlilIIi() local sdakdasIiI1iiiIil11IlI11Il = sdakdasIlili1IIi111iIlII1I() - (#{ 442, 6649, 301, 2719, 4550, 534, 2165, 1944, 489, 5623, 5870, 2624, 4301, 5515, 6489, 5278, 3193, 3454, 2926, 6915, 2861, 5281, 6505 } + sdakdasl1lll1Ii1lIlIlIl1II + 133654) local sdakdaslllliIIIlIllil11il1 = sdakdasIIl1i1l11Ii1IlilIIi() for sdakdasI1ll11IIiI11i1lIlI1 = sdakdaslIll1lllll11lIil1Iill, sdakdasIiI1iiiIil11IlI11Il do local sdakdasliIl1iiIIIl1Ili1II1 local sdakdasIiiiI1iiIllI1IlI1ll = sdakdasIIl1i1l11Ii1IlilIIi() if sdakdasIiiiI1iiIllI1IlI1ll == #{ 6101, 4768, 3761, 3759, 2707, 911, 5987, 3283, 83, 5283, 3512, 727, 5147, 3008, 3086, 6695, 776, 1315, 499, 755, 5852, 5003, 347, 450 } + sdakdasl1lll1Ii1lIlIlIl1II + 22 then sdakdasliIl1iiIIIl1Ili1II1 = sdakdasIIlII1Il1i1llIlilii() end if sdakdasIiiiI1iiIllI1IlI1ll == #{ 422, 6069, 565, 3063, 5621, 5198, 5583, 6547, 981, 1209, 530, 1329, 882, 5369, 1705, 4656, 3446, 4464, 5676, 4342 } + sdakdasl1lll1Ii1lIlIlIl1II + 160 then sdakdasliIl1iiIIIl1Ili1II1 = sdakdasIIlII1Il1i1llIlilii() + sdakdasIIlII1Il1i1llIlilii() end if sdakdasIiiiI1iiIllI1IlI1ll == #{ 3765, 5141, 3648, 3950, 1091, 1201, 2947, 4555, 1034, 281, 6287, 6700, 3356, 4283, 3565, 2407, 4511, 1980, 4973, 3581, 5829, 2553, 1103 } + sdakdasl1lll1Ii1lIlIlIl1II + 60 then sdakdasliIl1iiIIIl1Ili1II1 = sdakdasIIl1i1l11Ii1IlilIIi() end if sdakdasIiiiI1iiIllI1IlI1ll == #{ 4496, 4335, 6663, 5879, 2365, 6773, 5230, 5990, 2767, 6181, 4047, 3359, 2721, 6680, 6880, 0, 3835, 3593, 5036, 3645, 3314, 194, 2950, 269 } + sdakdasl1lll1Ii1lIlIlIl1II + 160 then sdakdasliIl1iiIIIl1Ili1II1 = #{ 3086, 3005, 4696, 3469, 3799, 5592, 2506, 1048, 5013, 5548, 5911, 1586, 1756, 5757, 4234, 5805, 1771, 1777, 587, 3915, 3254 } + sdakdasl1lll1Ii1lIlIlIl1II + 64117 == #{ 6538, 4001, 4186, 1119, 3404, 4715, 1495, 4366, 3181, 3852, 4649, 4284, 2394, 2018, 2530, 2716, 3731, 2800, 3007, 2398, 1590, 2619, 3619 } + sdakdasl1lll1Ii1lIlIlIl1II + 73290 end if sdakdasIiiiI1iiIllI1IlI1ll == #{ 1904, 2762, 1624, 1357, 1312, 2392, 710, 4386, 4770, 5537, 3886, 6161, 592, 2091, 2806, 1524, 1990, 4796, 4036, 4975 } + sdakdasl1lll1Ii1lIlIlIl1II + 176 then sdakdasliIl1iiIIIl1Ili1II1 = sdakdasIlili1IIi111iIlII1I() end if sdakdasIiiiI1iiIllI1IlI1ll == #{ 4514, 2822, 2847, 524, 4409, 5715, 6553, 6875, 4745, 2492, 234, 1826, 957, 4187, 163, 3869, 6107, 2390, 5198, 631, 6077, 2353 } + sdakdasl1lll1Ii1lIlIlIl1II + 97 then sdakdasliIl1iiIIIl1Ili1II1 = sdakdaslIlillIiIilii1lIliIli(sdakdaslIlii1ii1IiIii11iii1l(sdakdaslllliIIIlIllil11il1), #{ 215, 6423, 6355, 254, 6124 }) end if sdakdasIiiiI1iiIllI1IlI1ll == #{ 5508, 5549, 6220, 1865, 3725, 3180, 4074, 5416, 2084, 5308, 1673, 5607, 4598, 5732, 6406, 3153, 3728, 4005, 4546, 5740, 4312, 2203 } + sdakdasl1lll1Ii1lIlIlIl1II + 95 then sdakdasliIl1iiIIIl1Ili1II1 = sdakdasIIlII1Il1i1llIlilii() end if sdakdasIiiiI1iiIllI1IlI1ll == #{ 1435, 5748, 3088, 270, 2881, 5677, 5302, 2918, 1622, 1057, 4516, 89, 4220, 5790, 41, 1743, 346, 2341, 3391, 853, 4053, 5648, 1703 } + sdakdasl1lll1Ii1lIlIlIl1II + 138 then sdakdasliIl1iiIIIl1Ili1II1 = sdakdaslIlillIiIilii1lIliIli(sdakdaslIlii1ii1IiIii11iii1l(insEncKey), #{ 1660, 4840, 3410 }) end if sdakdasIiiiI1iiIllI1IlI1ll == #{ 2942, 5428, 5249, 6486, 5831, 3770, 1197, 6377, 5122, 6740, 5187, 6315, 4627, 466, 2512, 5143, 3073, 3729, 2230, 4288 } + sdakdasl1lll1Ii1lIlIlIl1II + 117 then sdakdasliIl1iiIIIl1Ili1II1 = #{ 1065, 4960, 414, 4980, 1223, 2213, 192, 5272, 6659, 4193, 624, 1245, 5521, 5178, 164, 836, 5821, 2441, 4219, 4417, 3114, 3487, 1800, 5408 } + sdakdasl1lll1Ii1lIlIlIl1II + 132252 == #{ 1065, 4960, 414, 4980, 1223, 2213, 192, 5272, 6659, 4193, 624, 1245, 5521, 5178, 164, 836, 5821, 2441, 4219, 4417, 3114, 3487, 1800, 5408 } + sdakdasl1lll1Ii1lIlIlIl1II + 132252 end sdakdasl1illlIlllIlIlilI1l[7][sdakdasI1ll11IIiI11i1lIlI1 - sdakdaslIll1lllll11lIil1Iill] = sdakdasliIl1iiIIIl1Ili1II1 end sdakdasIIl1i1l11Ii1IlilIIi() local sdakdasl1ilIliillIl1iiII1I = sdakdasIlili1IIi111iIlII1I() - (#{ 3164, 493, 2506, 4294, 6786, 1315, 1237, 990, 2311, 1602, 3642, 2504, 5175, 6795, 6594, 5433, 1098, 1534, 3499, 516 } + sdakdasl1lll1Ii1lIlIlIl1II + 133720) local sdakdasi111llil11iIill1I1l = sdakdasIIl1i1l11Ii1IlilIIi() for sdakdasI1ll11IIiI11i1lIlI1 = sdakdaslIll1lllll11lIil1Iill, sdakdasl1ilIliillIl1iiII1I do local sdakdaslIlliiIIi1iiIi1llI11I = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local sdakdasi1I1111IIIlIll1I11i = sdakdaslIl1I1il1ill1II1i1IIi(sdakdasi111llil11iIill1I1l) sdakdaslIlliiIIi1iiIi1llI11I[56378] = sdakdaslIl1I1liIIlIllI111i1I(sdakdasi1I1111IIIlIll1I11i, #{2569}, #{ 6025, 2509, 6366, 5051, 6143, 3851, 3084, 6023, 5422 }) sdakdaslIlliiIIi1iiIi1llI11I[3] = sdakdaslIl1I1liIIlIllI111i1I(sdakdasi1I1111IIIlIll1I11i, #{ 6363, 2435, 4182, 140, 2937, 2744, 5818, 201, 3570, 5920 }, #{ 6427, 2822, 3768, 13, 842, 1363, 6524, 1140, 2536, 1344, 4303, 3092, 6130, 3324, 4843, 4557, 697, 5069 }) sdakdaslIlliiIIi1iiIi1llI11I[5] = sdakdaslIl1I1liIIlIllI111i1I(sdakdasi1I1111IIIlIll1I11i, #{6625}, #{ 4552, 3433, 6251, 4752, 5158, 3706, 6106, 5567, 2926 }) sdakdaslIlliiIIi1iiIi1llI11I[7] = sdakdaslIl1I1liIIlIllI111i1I(sdakdasi1I1111IIIlIll1I11i, #{ 447, 6151, 6001, 1873, 1484, 6155, 2589, 687, 5573, 6158, 1287, 3271, 3894, 5989, 1339, 2896, 5244, 6290, 6873 }, #{ 4839, 5269, 3102, 2814, 2196, 1819, 4495, 1673, 5688, 6786, 6530, 2981, 3020, 1874, 435, 6382, 4362, 734, 1226, 5372, 3734, 1799, 4734, 4518 } + sdakdasl1lll1Ii1lIlIlIl1II + -55) sdakdaslIlliiIIi1iiIi1llI11I[8] = sdakdaslIl1I1liIIlIllI111i1I(sdakdasi1I1111IIIlIll1I11i, #{ 4201, 6247, 5237, 3184, 2813, 1246, 2793, 3560, 4109, 2739, 4537, 3460, 9, 4685, 5496, 6812, 6958, 3788, 6316, 6419 } + sdakdasl1lll1Ii1lIlIlIl1II + -50, #{ 3547, 3654, 5234, 6525, 309, 219, 4500, 301, 4667, 6139, 831, 6747, 5222, 4384, 1979, 1052, 6759, 1054, 3119, 900, 5508 } + sdakdasl1lll1Ii1lIlIlIl1II + -46) sdakdaslIlliiIIi1iiIi1llI11I[9] = sdakdaslIl1I1liIIlIllI111i1I(sdakdasi1I1111IIIlIll1I11i, #{518}, #{ 6964, 5240, 5754, 6174, 4879, 6301, 6394, 2983, 2305, 6952, 6424, 2122, 964, 3612, 1060, 6127, 2493, 785 }) sdakdasl1illlIlllIlIlilI1l[2][sdakdasI1ll11IIiI11i1lIlI1] = sdakdaslIlliiIIi1iiIi1llI11I end for sdakdasI1ll11IIiI11i1lIlI1 = sdakdaslIll1lllll11lIil1Iill, sdakdasl1ilIliillIl1iiII1I do local sdakdaslIlliiIIi1iiIi1llI11I = sdakdasl1illlIlllIlIlilI1l[2][sdakdasI1ll11IIiI11i1lIlI1] local sdakdaslIli1iIi11lIiiIi1ilil = sdakdaslIlliIli11IillllIIlIl[sdakdaslIlliiIIi1iiIi1llI11I[8]] if sdakdaslIli1iIi11lIiiIi1ilil == #{ 493, 3118, 1386 } then if sdakdaslIlliiIIi1iiIi1llI11I[5] > 255 then sdakdaslIlliiIIi1iiIi1llI11I[4] = true sdakdaslIlliiIIi1iiIi1llI11I[2] = sdakdasl1illlIlllIlIlilI1l[7][sdakdaslIlliiIIi1iiIi1llI11I[5] - 256] end if sdakdaslIlliiIIi1iiIi1llI11I[3] > 255 then sdakdaslIlliiIIi1iiIi1llI11I[6] = true sdakdaslIlliiIIi1iiIi1llI11I[10] = sdakdasl1illlIlllIlIlilI1l[7][sdakdaslIlliiIIi1iiIi1llI11I[3] - 256] end end if sdakdaslIli1iIi11lIiiIi1ilil == #{2202} and sdakdaslIlliiIIi1iiIi1llI11I[5] > 255 then sdakdaslIlliiIIi1iiIi1llI11I[4] = true sdakdaslIlliiIIi1iiIi1llI11I[2] = sdakdasl1illlIlllIlIlilI1l[7][sdakdaslIlliiIIi1iiIi1llI11I[5] - 256] end if sdakdaslIli1iIi11lIiiIi1ilil == #{4141, 2626} and sdakdaslIlliiIIi1iiIi1llI11I[3] > 255 then sdakdaslIlliiIIi1iiIi1llI11I[6] = true sdakdaslIlliiIIi1iiIi1llI11I[10] = sdakdasl1illlIlllIlIlilI1l[7][sdakdaslIlliiIIi1iiIi1llI11I[3] - 256] end if sdakdaslIli1iIi11lIiiIi1ilil == #{ 1633, 5946, 5128, 3470 } then sdakdaslIlliiIIi1iiIi1llI11I[1] = sdakdasl1illlIlllIlIlilI1l[7][sdakdaslIlliiIIi1iiIi1llI11I[9]] end end sdakdasIlili1IIi111iIlII1I() sdakdasIIl1i1l11Ii1IlilIIi() return sdakdasl1illlIlllIlIlilI1l end local function sdakdasl1I1illlliiIiI1Il1i(sdakdasl1illlIlllIlIlilI1l, sdakdasIl111lilill11lli1iI, sdakdasI1iiIIiIii1i11illl1) local sdakdasI11IilIIIlI1iI1i1i1, sdakdasl1Il1l1IIII1liII1iI = 15, -1 local sdakdasllIliilIIil1ili11II = sdakdasl1illlIlllIlIlilI1l[2] local sdakdasIillIi1i11Ilii1illl = 6 local sdakdasl1llII1IiI1IiliIi1I = sdakdasl1illlIlllIlIlilI1l[4] local sdakdasiiII11ilIIiI1li11Il = sdakdasl1illlIlllIlIlilI1l[3] local sdakdasli1lliIIl11li1ll1lI = sdakdasl1illlIlllIlIlilI1l[5] local sdakdasI1lilII1i1l1IIi1i1l = 8 local sdakdaslIlli11lil1lII1liIIlI = sdakdasl1illlIlllIlIlilI1l[1] local sdakdasiil1iIi1IIIii1llliI = 5 local function sdakdasllIlliIilIIliliIIi1(...) local sdakdaslIl1iIi1iilIIi1iii11l = 0 local sdakdasill1liIlI11IlIiI1ii = { sdakdasii1lillI11li1lli1II({}, 1, sdakdasli1lliIIl11li1ll1lI) } local sdakdaslIIll1Il1i111iilill = 1 local sdakdasi1lIi1IilI1III11li1 = {} local sdakdaslIl1lliiil1lI1iiIlll1 = {} local sdakdasIl111lilill11lli1iI = sdakdasiilI1llililil1li1il() local sdakdasl1Iilili1i1IIi1li1i = { ... } local sdakdaslIl1IIIiIiI1ii11l1il1 = #sdakdasl1Iilili1i1IIi1li1i - 1 for sdakdasI1ll11IIiI11i1lIlI1 = 0, sdakdaslIl1IIIiIiI1ii11l1il1 do if sdakdasI1ll11IIiI11i1lIlI1 < sdakdasiiII11ilIIiI1li11Il then sdakdasill1liIlI11IlIiI1ii[sdakdasI1ll11IIiI11i1lIlI1] = sdakdasl1Iilili1i1IIi1li1i[sdakdasI1ll11IIiI11i1lIlI1 + 1] end end local function sdakdasll11111iliIlll1i1I1(...) local sdakdaslIl1i1liililI11I1l11I = sdakdaslIlll11I1liIilIl1I1ii("#", ...) local sdakdasI1IlIIliIilIiii1i1i = { ... } return sdakdaslIl1i1liililI11I1l11I, sdakdasI1IlIIliIilIiii1i1i end local function sdakdasillillIIli11iii1lii() while true do local sdakdaslIli111i11IlIli1i11Ii = sdakdasllIliilIIil1ili11II[sdakdaslIIll1Il1i111iilill] local sdakdasIii1IIlilIl1lllII1i = sdakdaslIli111i11IlIli1i11Ii[8] sdakdaslIIll1Il1i111iilill = sdakdaslIIll1Il1i111iilill + 1 if sdakdasIii1IIlilIl1lllII1i < 9 then if sdakdasIii1IIlilIl1lllII1i >= 4 then if sdakdasIii1IIlilIl1lllII1i >= 6 then if sdakdasIii1IIlilIl1lllII1i < 7 then sdakdasill1liIlI11IlIiI1ii[sdakdaslIli111i11IlIli1i11Ii[7]] = sdakdaslIli111i11IlIli1i11Ii[1] elseif sdakdasIii1IIlilIl1lllII1i == 8 then sdakdasill1liIlI11IlIiI1ii[sdakdaslIli111i11IlIli1i11Ii[7]] = sdakdasIl111lilill11lli1iI[sdakdaslIli111i11IlIli1i11Ii[1]] elseif sdakdaslIli111i11IlIli1i11Ii[3] == 158 then sdakdaslIIll1Il1i111iilill = sdakdaslIIll1Il1i111iilill - 1 sdakdasllIliilIIil1ili11II[sdakdaslIIll1Il1i111iilill] = { [8] = 15, [7] = (sdakdaslIli111i11IlIli1i11Ii[7] - 44) % 256, [5] = (sdakdaslIli111i11IlIli1i11Ii[5] - 44) % 256 } else for sdakdasI1ll11IIiI11i1lIlI1 = sdakdaslIli111i11IlIli1i11Ii[7], sdakdaslIli111i11IlIli1i11Ii[5] do sdakdasill1liIlI11IlIiI1ii[sdakdasI1ll11IIiI11i1lIlI1] = nil end end elseif sdakdasIii1IIlilIl1lllII1i == 5 then sdakdasill1liIlI11IlIiI1ii[sdakdaslIli111i11IlIli1i11Ii[7]] = sdakdaslIli111i11IlIli1i11Ii[5] ~= 0 if sdakdaslIli111i11IlIli1i11Ii[3] ~= 0 then sdakdaslIIll1Il1i111iilill = sdakdaslIIll1Il1i111iilill + 1 end else sdakdasill1liIlI11IlIiI1ii[sdakdaslIli111i11IlIli1i11Ii[7]] = { sdakdasii1lillI11li1lli1II(sdakdasi1IlIIIll11i11iIii1, 1, sdakdaslIli111i11IlIli1i11Ii[5] == 0 and 255 or sdakdaslIli111i11IlIli1i11Ii[5]) } end elseif sdakdasIii1IIlilIl1lllII1i < 2 then if sdakdasIii1IIlilIl1lllII1i ~= 1 then local sdakdasiI1IiilIIlIiiI1iliI = sdakdasl1llII1IiI1IiliIi1I[sdakdaslIli111i11IlIli1i11Ii[9]] local sdakdasiI111IIl1iliII1l1Il = {} if sdakdasiI1IiilIIlIiiI1iliI[sdakdasIillIi1i11Ilii1illl] > 0 then do local sdakdasiiliiIili1i1iIlIllI = {} sdakdasiI111IIl1iliII1l1Il = sdakdaslIll1l1iI11i1Il11il({}, { __index = function(sdakdasI1IlIIliIilIiii1i1i, sdakdaslIlIIIl1liIlII11lIi1i) local sdakdaslIlli1I11IiIlIlliI1II = sdakdasiiliiIili1i1iIlIllI[sdakdaslIlIIIl1liIlII11lIi1i] return sdakdaslIlli1I11IiIlIlliI1II[1][sdakdaslIlli1I11IiIlIlliI1II[2]] end, __newindex = function(sdakdasI1IlIIliIilIiii1i1i, sdakdaslIlIIIl1liIlII11lIi1i, sdakdaslIl1IiiIIIll1II1I11il) local sdakdaslIlli1I11IiIlIlliI1II = sdakdasiiliiIili1i1iIlIllI[sdakdaslIlIIIl1liIlII11lIi1i] sdakdaslIlli1I11IiIlIlliI1II[1][sdakdaslIlli1I11IiIlIlliI1II[2]] = sdakdaslIl1IiiIIIll1II1I11il end }) for sdakdasI1ll11IIiI11i1lIlI1 = 1, sdakdasiI1IiilIIlIiiI1iliI[sdakdasIillIi1i11Ilii1illl] do local sdakdaslllIii1lllI1liIl1i1 = sdakdasllIliilIIil1ili11II[sdakdaslIIll1Il1i111iilill] if sdakdaslllIii1lllI1liIl1i1[sdakdasI1lilII1i1l1IIi1i1l] == sdakdasI11IilIIIlI1iI1i1i1 then sdakdasiiliiIili1i1iIlIllI[sdakdasI1ll11IIiI11i1lIlI1 - 1] = { sdakdasill1liIlI11IlIiI1ii, sdakdaslllIii1lllI1liIl1i1[sdakdasiil1iIi1IIIii1llliI] } elseif sdakdaslllIii1lllI1liIl1i1[sdakdasI1lilII1i1l1IIi1i1l] == sdakdasl1Il1l1IIII1liII1iI then sdakdasiiliiIili1i1iIlIllI[sdakdasI1ll11IIiI11i1lIlI1 - 1] = { sdakdasI1iiIIiIii1i11illl1, sdakdaslllIii1lllI1liIl1i1[sdakdasiil1iIi1IIIii1llliI] } end sdakdaslIIll1Il1i111iilill = sdakdaslIIll1Il1i111iilill + 1 end if not sdakdasi1lIi1IilI1III11li1[sdakdasill1liIlI11IlIiI1ii] then sdakdasi1lIi1IilI1III11li1[sdakdasill1liIlI11IlIiI1ii] = {sdakdasiiliiIili1i1iIlIllI} else sdakdasIiIl1iiilIii1i1llIl(sdakdasi1lIi1IilI1III11li1[sdakdasill1liIlI11IlIiI1ii], sdakdasiiliiIili1i1iIlIllI) end end end local sdakdaslIll1IIlIII111il1l1 = sdakdasl1I1illlliiIiI1Il1i(sdakdasiI1IiilIIlIiiI1iliI, sdakdasIl111lilill11lli1iI, sdakdasiI111IIl1iliII1l1Il) sdakdasill1liIlI11IlIiI1ii[sdakdaslIli111i11IlIli1i11Ii[7]] = sdakdaslIll1IIlIII111il1l1 else local sdakdasI1ilIl1i1l1111iIi1I, sdakdaslIl1i1liililI11I1l11I if sdakdaslIli111i11IlIli1i11Ii[4] then sdakdasI1ilIl1i1l1111iIi1I = sdakdaslIli111i11IlIli1i11Ii[2] else sdakdasI1ilIl1i1l1111iIi1I = sdakdasill1liIlI11IlIiI1ii[sdakdaslIli111i11IlIli1i11Ii[5]] end if sdakdaslIli111i11IlIli1i11Ii[6] then sdakdaslIl1i1liililI11I1l11I = sdakdaslIli111i11IlIli1i11Ii[10] else sdakdaslIl1i1liililI11I1l11I = sdakdasill1liIlI11IlIiI1ii[sdakdaslIli111i11IlIli1i11Ii[3]] end if sdakdasI1ilIl1i1l1111iIi1I == sdakdaslIl1i1liililI11I1l11I ~= (sdakdaslIli111i11IlIli1i11Ii[7] ~= 0) then sdakdaslIIll1Il1i111iilill = sdakdaslIIll1Il1i111iilill + 1 end end elseif sdakdasIii1IIlilIl1lllII1i == 3 then local sdakdaslIl1i1liililI11I1l11I if sdakdaslIli111i11IlIli1i11Ii[6] then sdakdaslIl1i1liililI11I1l11I = sdakdaslIli111i11IlIli1i11Ii[10] else sdakdaslIl1i1liililI11I1l11I = sdakdasill1liIlI11IlIiI1ii[sdakdaslIli111i11IlIli1i11Ii[3]] end sdakdasill1liIlI11IlIiI1ii[sdakdaslIli111i11IlIli1i11Ii[7]] = sdakdasill1liIlI11IlIiI1ii[sdakdaslIli111i11IlIli1i11Ii[5]][sdakdaslIl1i1liililI11I1l11I] else sdakdaslIIll1Il1i111iilill = sdakdaslIIll1Il1i111iilill + (sdakdaslIli111i11IlIli1i11Ii[9] - sdakdaslillIl1lliiliiillIl) end elseif sdakdasIii1IIlilIl1lllII1i < 14 then if sdakdasIii1IIlilIl1lllII1i >= 11 then if sdakdasIii1IIlilIl1lllII1i < 12 then if not not sdakdasill1liIlI11IlIiI1ii[sdakdaslIli111i11IlIli1i11Ii[7]] == (sdakdaslIli111i11IlIli1i11Ii[3] == 0) then sdakdaslIIll1Il1i111iilill = sdakdaslIIll1Il1i111iilill + 1 end elseif sdakdasIii1IIlilIl1lllII1i ~= 13 then local sdakdasiilIIII11I1l11lill1 = (sdakdaslIli111i11IlIli1i11Ii[3] - 1) * 50 local sdakdasi1l1ilIiIIii1iiII1l = sdakdaslIli111i11IlIli1i11Ii[5] if sdakdasi1l1ilIiIIii1iiII1l == 0 then sdakdasi1l1ilIiIIii1iiII1l = sdakdaslIl1iIi1iilIIi1iii11l - sdakdaslIli111i11IlIli1i11Ii[7] end for sdakdasI1ll11IIiI11i1lIlI1 = 1, sdakdasi1l1ilIiIIii1iiII1l do sdakdasill1liIlI11IlIiI1ii[sdakdaslIli111i11IlIli1i11Ii[7]][sdakdasiilIIII11I1l11lill1 + sdakdasI1ll11IIiI11i1lIlI1] = sdakdasill1liIlI11IlIiI1ii[sdakdaslIli111i11IlIli1i11Ii[7] + sdakdasI1ll11IIiI11i1lIlI1] end else local sdakdasI1ilIl1i1l1111iIi1I, sdakdaslIl1i1liililI11I1l11I if sdakdaslIli111i11IlIli1i11Ii[4] then sdakdasI1ilIl1i1l1111iIi1I = sdakdaslIli111i11IlIli1i11Ii[2] else sdakdasI1ilIl1i1l1111iIi1I = sdakdasill1liIlI11IlIiI1ii[sdakdaslIli111i11IlIli1i11Ii[5]] end if sdakdaslIli111i11IlIli1i11Ii[6] then sdakdaslIl1i1liililI11I1l11I = sdakdaslIli111i11IlIli1i11Ii[10] else sdakdaslIl1i1liililI11I1l11I = sdakdasill1liIlI11IlIiI1ii[sdakdaslIli111i11IlIli1i11Ii[3]] end if sdakdasI1ilIl1i1l1111iIi1I <= sdakdaslIl1i1liililI11I1l11I ~= (sdakdaslIli111i11IlIli1i11Ii[7] ~= 0) then sdakdaslIIll1Il1i111iilill = sdakdaslIIll1Il1i111iilill + 1 end end elseif sdakdasIii1IIlilIl1lllII1i == 10 then sdakdasi1lIi1IilI1III11li1[sdakdasill1liIlI11IlIiI1ii] = nil local sdakdasi1IiI1i1IlIliIlil1l = sdakdaslIli111i11IlIli1i11Ii[7] local sdakdaslIllI1IIiilllI1llliil = sdakdaslIli111i11IlIli1i11Ii[5] if sdakdaslIllI1IIiilllI1llliil == 1 then return true end local sdakdasiiIlIi1ilillI11l11i = sdakdasi1IiI1i1IlIliIlil1l + sdakdaslIllI1IIiilllI1llliil - 2 if sdakdaslIllI1IIiilllI1llliil == 0 then sdakdasiiIlIi1ilillI11l11i = sdakdaslIl1iIi1iilIIi1iii11l end return true, sdakdasi1IiI1i1IlIliIlil1l, sdakdasiiIlIi1ilillI11l11i elseif sdakdaslIli111i11IlIli1i11Ii[3] == 19 then sdakdaslIIll1Il1i111iilill = sdakdaslIIll1Il1i111iilill - 1 sdakdasllIliilIIil1ili11II[sdakdaslIIll1Il1i111iilill] = { [8] = 10, [7] = (sdakdaslIli111i11IlIli1i11Ii[7] - 45) % 256, [5] = (sdakdaslIli111i11IlIli1i11Ii[5] - 45) % 256 } else local sdakdasIlIililIIII1llIlllI = sdakdaslIli111i11IlIli1i11Ii[7] local sdakdasIiI1IiiII1lIiI11IlI = {} for sdakdasiiil1li1i11iI11II1i, sdakdasiiliiIili1i1iIlIllI in pairs(sdakdasi1lIi1IilI1III11li1[sdakdasill1liIlI11IlIiI1ii]) do for sdakdasiiil1li1i11iI11II1i, sdakdaslIlli1I11IiIlIlliI1II in pairs(sdakdasiiliiIili1i1iIlIllI) do if sdakdaslIlli1I11IiIlIlliI1II[1] == sdakdasill1liIlI11IlIiI1ii and sdakdasIlIililIIII1llIlllI <= sdakdaslIlli1I11IiIlIlliI1II[2] then local sdakdaslIII1l1Ili1lilI1lIi = sdakdaslIlli1I11IiIlIlliI1II[2] if not sdakdasIiI1IiiII1lIiI11IlI[sdakdaslIII1l1Ili1lilI1lIi] then sdakdasl1I1illlliiIiI1Il1i(sdakdaslIl1lliiil1lI1iiIlll1, sdakdasill1liIlI11IlIiI1ii[sdakdaslIII1l1Ili1lilI1lIi]) sdakdasIiI1IiiII1lIiI11IlI[sdakdaslIII1l1Ili1lilI1lIi] = #sdakdaslIl1lliiil1lI1iiIlll1 end sdakdaslIlli1I11IiIlIlliI1II[1] = sdakdaslIl1lliiil1lI1iiIlll1 sdakdaslIlli1I11IiIlIlliI1II[2] = sdakdasIiI1IiiII1lIiI11IlI[sdakdaslIII1l1Ili1lilI1lIi] end end end end elseif sdakdasIii1IIlilIl1lllII1i < 16 then if sdakdasIii1IIlilIl1lllII1i == 15 then if sdakdaslIli111i11IlIli1i11Ii[3] == 36 then sdakdaslIIll1Il1i111iilill = sdakdaslIIll1Il1i111iilill - 1 sdakdasllIliilIIil1ili11II[sdakdaslIIll1Il1i111iilill] = { [8] = 11, [7] = (sdakdaslIli111i11IlIli1i11Ii[7] - 126) % 256, [3] = (sdakdaslIli111i11IlIli1i11Ii[5] - 126) % 256 } else sdakdasill1liIlI11IlIiI1ii[sdakdaslIli111i11IlIli1i11Ii[7]] = sdakdasill1liIlI11IlIiI1ii[sdakdaslIli111i11IlIli1i11Ii[5]] end else local sdakdasi1IiI1i1IlIliIlil1l = sdakdaslIli111i11IlIli1i11Ii[7] local sdakdasl1Iilili1i1IIi1li1i = sdakdaslIli111i11IlIli1i11Ii[5] local sdakdaslliIllili1Ililliii1 = sdakdaslIli111i11IlIli1i11Ii[3] local sdakdasllilIIiiIii111Iill1, sdakdasiiIlIi1ilillI11l11i, sdakdasillillIIli11iii1lii if sdakdasl1Iilili1i1IIi1li1i ~= 1 then if sdakdasl1Iilili1i1IIi1li1i ~= 0 then sdakdasiiIlIi1ilillI11l11i = sdakdasi1IiI1i1IlIliIlil1l + sdakdasl1Iilili1i1IIi1li1i - 1 else sdakdasiiIlIi1ilillI11l11i = sdakdaslIl1iIi1iilIIi1iii11l end sdakdasiiIlIi1ilillI11l11i, sdakdasllilIIiiIii111Iill1 = sdakdasll11111iliIlll1i1I1(sdakdasill1liIlI11IlIiI1ii[sdakdasi1IiI1i1IlIliIlil1l](sdakdasii1lillI11li1lli1II(sdakdasill1liIlI11IlIiI1ii, sdakdasi1IiI1i1IlIliIlil1l + 1, sdakdasiiIlIi1ilillI11l11i))) else sdakdasiiIlIi1ilillI11l11i, sdakdasllilIIiiIii111Iill1 = sdakdasll11111iliIlll1i1I1(sdakdasill1liIlI11IlIiI1ii[sdakdasi1IiI1i1IlIliIlil1l]()) end if sdakdaslliIllili1Ililliii1 ~= 1 then if sdakdaslliIllili1Ililliii1 ~= 0 then sdakdasiiIlIi1ilillI11l11i = sdakdasi1IiI1i1IlIliIlil1l + sdakdaslliIllili1Ililliii1 - 2 sdakdaslIl1iIi1iilIIi1iii11l = sdakdasiiIlIi1ilillI11l11i + 1 else sdakdasiiIlIi1ilillI11l11i = sdakdasiiIlIi1ilillI11l11i + sdakdasi1IiI1i1IlIliIlil1l - 1 sdakdaslIl1iIi1iilIIi1iii11l = sdakdasiiIlIi1ilillI11l11i end sdakdasillillIIli11iii1lii = 0 for sdakdasI1ll11IIiI11i1lIlI1 = sdakdasi1IiI1i1IlIliIlil1l, sdakdasiiIlIi1ilillI11l11i do sdakdasillillIIli11iii1lii = sdakdasillillIIli11iii1lii + 1 sdakdasill1liIlI11IlIiI1ii[sdakdasI1ll11IIiI11i1lIlI1] = sdakdasllilIIiiIii111Iill1[sdakdasillillIIli11iii1lii] end else sdakdaslIl1iIi1iilIIi1iii11l = sdakdasi1IiI1i1IlIliIlil1l - 1 end for sdakdasI1ll11IIiI11i1lIlI1 = sdakdaslIl1iIi1iilIIi1iii11l + 1, sdakdasli1lliIIl11li1ll1lI do sdakdasill1liIlI11IlIiI1ii[sdakdasI1ll11IIiI11i1lIlI1] = nil end end elseif sdakdasIii1IIlilIl1lllII1i >= 17 then if sdakdasIii1IIlilIl1lllII1i ~= 18 then local sdakdasI1ilIl1i1l1111iIi1I, sdakdaslIl1i1liililI11I1l11I if sdakdaslIli111i11IlIli1i11Ii[4] then sdakdasI1ilIl1i1l1111iIi1I = sdakdaslIli111i11IlIli1i11Ii[2] else sdakdasI1ilIl1i1l1111iIi1I = sdakdasill1liIlI11IlIiI1ii[sdakdaslIli111i11IlIli1i11Ii[5]] end if sdakdaslIli111i11IlIli1i11Ii[6] then sdakdaslIl1i1liililI11I1l11I = sdakdaslIli111i11IlIli1i11Ii[10] else sdakdaslIl1i1liililI11I1l11I = sdakdasill1liIlI11IlIiI1ii[sdakdaslIli111i11IlIli1i11Ii[3]] end sdakdasill1liIlI11IlIiI1ii[sdakdaslIli111i11IlIli1i11Ii[7]][sdakdasI1ilIl1i1l1111iIi1I] = sdakdaslIl1i1liililI11I1l11I else local sdakdasI1ilIl1i1l1111iIi1I, sdakdaslIl1i1liililI11I1l11I if sdakdaslIli111i11IlIli1i11Ii[4] then sdakdasI1ilIl1i1l1111iIi1I = sdakdaslIli111i11IlIli1i11Ii[2] else sdakdasI1ilIl1i1l1111iIi1I = sdakdasill1liIlI11IlIiI1ii[sdakdaslIli111i11IlIli1i11Ii[5]] end if sdakdaslIli111i11IlIli1i11Ii[6] then sdakdaslIl1i1liililI11I1l11I = sdakdaslIli111i11IlIli1i11Ii[10] else sdakdaslIl1i1liililI11I1l11I = sdakdasill1liIlI11IlIiI1ii[sdakdaslIli111i11IlIli1i11Ii[3]] end if sdakdasI1ilIl1i1l1111iIi1I < sdakdaslIl1i1liililI11I1l11I ~= (sdakdaslIli111i11IlIli1i11Ii[7] ~= 0) then sdakdaslIIll1Il1i111iilill = sdakdaslIIll1Il1i111iilill + 1 end end else sdakdasIl111lilill11lli1iI[sdakdaslIli111i11IlIli1i11Ii[1]] = sdakdasill1liIlI11IlIiI1ii[sdakdaslIli111i11IlIli1i11Ii[7]] end end end local sdakdasl1illIliili1lIlII11, sdakdaslIl1I1llIIl1l1II11iiI, sdakdasIlIililIIII1llIlllI, sdakdasiiliI1II1iIi1iliiIl = sdakdasIi1IIiilil1iliIiliI(sdakdasillillIIli11iii1lii) if sdakdasl1illIliili1lIlII11 then if sdakdasIlIililIIII1llIlllI then return sdakdasii1lillI11li1lli1II(sdakdasill1liIlI11IlIiI1ii, sdakdasIlIililIIII1llIlllI, sdakdasiiliI1II1iIi1iliiIl) end else sdakdaslIlilIi11i1lIilllIIi1("Luraph Script:" .. (sdakdaslIlli11lil1lII1liIIlI[sdakdaslIIll1Il1i111iilill - 1] or "") .. ": " .. sdakdaslIl11ll11IIlIl1liil1I(sdakdaslIl1I1llIIl1l1II11iiI), 0) end end sdakdasl1IIli1I1lII1lII1li(sdakdasllIlliIilIIliliIIi1, sdakdasIl111lilill11lli1iI) return sdakdasllIlliIilIIliliIIi1 end local sdakdasIiI1IiiII1lIiI11IlI = sdakdasilIIiI11lI111Il1I1l() return sdakdasl1I1illlliiIiI1Il1i(sdakdasIiI1IiiII1lIiI11IlI, sdakdasIl111lilill11lli1iI)() end sdakdaslIi1l1liilI11lliIli("LPH!", sdakdasiilI1llililil1li1il()) 